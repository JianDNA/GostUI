var e=(e,l,a)=>new Promise(((t,s)=>{var u=e=>{try{r(a.next(e))}catch(l){s(l)}},i=e=>{try{r(a.throw(e))}catch(l){s(l)}},r=e=>e.done?t(e.value):Promise.resolve(e.value).then(u,i);r((a=a.apply(e,l)).next())}));import{a as l}from"./api-ec0be92e.js";import{getApiModeInfo as a,switchApiMode as t}from"./api-0ebaed28.js";import{_ as s,r as u,m as i,n as r,d as n,e as o,w as d,q as c,s as v,E as p,f as m,o as y,g as f,k as h,t as g,F as _,D as b}from"./index-667784df.js";const k={class:"advanced-traffic-test"},w={class:"card-header"},$={class:"mode-info"},z={class:"mode-buttons"},T={class:"port-controls"},A={class:"port-input-group"},C={key:0,class:"quick-ports"},x={key:0,class:"port-status"},S={class:"test-controls"},U={class:"size-control"},B={class:"quick-tests"},M={class:"card-header"},P=s({__name:"AdvancedTrafficTest",setup(s){const P=u(null),I=u(6443),L=u(1),V=u(!1),j=u(!1),D=u(null),R=u([]),q=u([]),E=u("direct"),G=u(""),X=u({direct:{baseURL:"http://localhost:3000/api",description:"直连后端"},gost:{baseURL:"http://localhost:6443/api",description:"通过GOST代理"},production:{baseURL:"/api",description:"生产环境"}}),F=i((()=>{var e;return"admin"===(null==(e=P.value)?void 0:e.role)})),O=()=>{const e=a();E.value=e.mode,G.value=e.config.baseURL},H=e=>({direct:"直连模式",gost:"GOST模式",production:"生产模式"}[e]||e),J=()=>e(this,null,(function*(){var e,a;try{const e=yield l.get("/users/me");e.data&&e.data.data?P.value=e.data.data:P.value=e.data,F.value||(yield K())}catch(t){p.error("获取用户信息失败: "+((null==(a=null==(e=t.response)?void 0:e.data)?void 0:a.message)||t.message)),P.value={id:"unknown",username:"unknown",role:"user"}}})),K=()=>e(this,null,(function*(){try{const e=(yield l.get("/user-forward-rules")).data.rules||[];R.value=e.map((e=>({port:e.sourcePort,name:e.name,target:e.targetAddress,isActive:!0===e.isActive}))).filter((e=>e.isActive)),R.value.length>0&&(I.value=R.value[0].port)}catch(e){p.error("获取转发规则失败")}})),N=()=>e(this,null,(function*(){if(I.value){j.value=!0;try{if(F.value)D.value={type:"success",title:"端口可用",message:`Admin用户可以测试端口 ${I.value}`};else{const e=R.value.find((e=>e.port===I.value));D.value=e?{type:"success",title:"端口可用",message:`可以测试您的转发规则端口 ${I.value} (${e.name})`}:{type:"error",title:"端口不可用",message:`端口 ${I.value} 不在您的转发规则中，或规则未激活`}}}catch(e){D.value={type:"error",title:"验证失败",message:e.message}}finally{j.value=!1}}else D.value={type:"error",title:"端口无效",message:"请输入有效的端口号"}})),Q=()=>e(this,null,(function*(){yield Y(L.value)})),W=l=>e(this,null,(function*(){yield Y(l)})),Y=l=>e(this,null,(function*(){var e,a;if(!I.value||"success"!==(null==(e=D.value)?void 0:e.type))return void p.warning("请先选择并验证端口");if(!P.value)return void p.error("用户信息未加载，请刷新页面重试");V.value=!0;const t=new Date;try{const e=localStorage.getItem("token"),s=`http://localhost:${I.value}/api/test/traffic-custom?size=${l}`,u=yield fetch(s,{method:"GET",headers:{Authorization:`Bearer ${e}`,"X-Test-Mode":"port-specific","X-User-ID":(null==(a=P.value.id)?void 0:a.toString())||"unknown","X-Username":P.value.username||"unknown",Accept:"application/json","Cache-Control":"no-cache"},signal:AbortSignal.timeout(6e4)});if(!u.ok)throw new Error(`HTTP ${u.status}: ${u.statusText}`);const i=((yield u.blob()).size/1048576).toFixed(2),r=Date.now()-t.getTime();q.value.unshift({time:t.toLocaleTimeString(),port:I.value,size:`${l}MB`,actualSize:`${i}MB`,duration:`${r}ms`,status:"success",message:`通过端口 ${I.value} 成功传输`}),p.success(`测试成功: ${i}MB，耗时 ${r}ms`)}catch(s){q.value.unshift({time:t.toLocaleTimeString(),port:I.value,size:`${l}MB`,actualSize:"-",duration:"-",status:"failed",message:s.message}),p.error(`测试失败: ${s.message}`)}finally{V.value=!1}})),Z=()=>{q.value=[],p.success("结果已清空")};return r((()=>e(this,null,(function*(){O(),yield J(),I.value&&(yield N())})))),(e,l)=>{var a;const s=m("el-tag"),u=m("el-alert"),i=m("el-card"),r=m("el-button"),J=m("el-input-number"),K=m("el-table-column"),Y=m("el-table");return y(),n("div",k,[o(i,{class:"header-card"},{header:d((()=>{var e;return[f("div",w,[l[2]||(l[2]=f("h2",null,"🧪 高级流量测试",-1)),o(s,{type:"admin"===(null==(e=P.value)?void 0:e.role)?"success":"primary"},{default:d((()=>{var e;return[h(g((null==(e=P.value)?void 0:e.username)||"未知用户"),1)]})),_:1},8,["type"])])]})),default:d((()=>[o(u,{title:"测试说明",type:"info",closable:!1,"show-icon":""},{default:d((()=>l[3]||(l[3]=[f("p",null,"此工具整合了API模式切换和流量测试功能。",-1),f("p",null,[f("strong",null,"Admin用户"),h("：可以测试任意端口和切换API模式")],-1),f("p",null,[f("strong",null,"Test用户"),h("：可以测试自己的转发规则端口")],-1)]))),_:1,__:[3]})])),_:1}),F.value?(y(),c(i,{key:0,class:"api-mode-card"},{header:d((()=>l[4]||(l[4]=[f("h3",null,"🔧 API 模式切换",-1)]))),default:d((()=>[f("div",$,[f("p",null,[l[5]||(l[5]=f("strong",null,"当前模式：",-1)),o(s,{type:"gost"===E.value?"success":"primary"},{default:d((()=>[h(g(H(E.value)),1)])),_:1},8,["type"])]),f("p",null,[l[6]||(l[6]=f("strong",null,"当前地址：",-1)),h(" "+g(G.value),1)])]),f("div",z,[(y(!0),n(_,null,b(X.value,((e,a)=>(y(),c(r,{key:a,type:E.value===a?"primary":"default",onClick:e=>(e=>{t(e)?(O(),p.success(`已切换到${H(e)}`),setTimeout((()=>{window.location.reload()}),1e3)):p.error("切换模式失败")})(a),disabled:E.value===a},{default:d((()=>[h(g(H(a))+" ",1),l[7]||(l[7]=f("br",null,null,-1)),f("small",null,g(e.description),1)])),_:2,__:[7]},1032,["type","onClick","disabled"])))),128))])])),_:1})):v("",!0),o(i,{class:"port-selection-card"},{header:d((()=>l[8]||(l[8]=[f("h3",null,"🔌 端口选择",-1)]))),default:d((()=>[f("div",T,[f("div",A,[o(J,{modelValue:I.value,"onUpdate:modelValue":l[0]||(l[0]=e=>I.value=e),min:1,max:65535,placeholder:"输入端口号",style:{width:"200px"}},null,8,["modelValue"]),o(r,{type:"primary",onClick:N,loading:j.value},{default:d((()=>l[9]||(l[9]=[h(" 验证端口 ")]))),_:1,__:[9]},8,["loading"])]),R.value.length>0?(y(),n("div",C,[l[10]||(l[10]=f("span",null,"快速选择：",-1)),(y(!0),n(_,null,b(R.value,(e=>(y(),c(r,{key:e.port,size:"small",type:I.value===e.port?"primary":"default",onClick:l=>{I.value=e.port,N()}},{default:d((()=>[h(g(e.port)+" ("+g(e.name)+") ",1)])),_:2},1032,["type","onClick"])))),128))])):v("",!0)]),D.value?(y(),n("div",x,[o(u,{title:D.value.title,type:D.value.type,closable:!1,"show-icon":""},{default:d((()=>[h(g(D.value.message),1)])),_:1},8,["title","type"])])):v("",!0)])),_:1}),"success"===(null==(a=D.value)?void 0:a.type)?(y(),c(i,{key:1,class:"traffic-test-card"},{header:d((()=>l[11]||(l[11]=[f("h3",null,"📊 流量测试",-1)]))),default:d((()=>{var e;return[f("div",S,[f("div",U,[l[12]||(l[12]=f("label",null,"测试大小：",-1)),o(J,{modelValue:L.value,"onUpdate:modelValue":l[1]||(l[1]=e=>L.value=e),min:.1,max:1024,step:.1,precision:1,style:{width:"150px"}},null,8,["modelValue"]),l[13]||(l[13]=f("span",null,"MB",-1))]),o(r,{type:"primary",size:"large",onClick:Q,loading:V.value,disabled:!I.value||"success"!==(null==(e=D.value)?void 0:e.type)},{default:d((()=>l[14]||(l[14]=[h(" 执行测试 ")]))),_:1,__:[14]},8,["loading","disabled"])]),f("div",B,[l[15]||(l[15]=f("span",null,"快速测试：",-1)),(y(),n(_,null,b([1,5,10,50,100],(e=>{var l;return o(r,{key:e,size:"small",onClick:l=>W(e),loading:V.value,disabled:!I.value||"success"!==(null==(l=D.value)?void 0:l.type)},{default:d((()=>[h(g(e)+"MB ",1)])),_:2},1032,["onClick","loading","disabled"])})),64))])]})),_:1})):v("",!0),q.value.length>0?(y(),c(i,{key:2,class:"results-card"},{header:d((()=>[f("div",M,[l[17]||(l[17]=f("h3",null,"📈 测试结果",-1)),o(r,{size:"small",onClick:Z},{default:d((()=>l[16]||(l[16]=[h("清空结果")]))),_:1,__:[16]})])])),default:d((()=>[o(Y,{data:q.value,stripe:""},{default:d((()=>[o(K,{prop:"time",label:"时间",width:"120"}),o(K,{prop:"port",label:"端口",width:"80"}),o(K,{prop:"size",label:"请求大小",width:"100"}),o(K,{prop:"actualSize",label:"实际大小",width:"100"}),o(K,{prop:"duration",label:"耗时",width:"100"}),o(K,{prop:"status",label:"状态",width:"80"},{default:d((({row:e})=>[o(s,{type:"success"===e.status?"success":"danger"},{default:d((()=>[h(g("success"===e.status?"成功":"失败"),1)])),_:2},1032,["type"])])),_:1}),o(K,{prop:"message",label:"详情"})])),_:1},8,["data"])])),_:1})):v("",!0)])}}},[["__scopeId","data-v-aee304b8"]]);export{P as default};
