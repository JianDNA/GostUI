import{a as e}from"./api-814d2442.js";import{_ as a,g as l,s as t}from"./index-75dfb4d4.js";import{E as s}from"./element-plus-0a16f2db.js";import{r as u,c as r,k as o,z as i,P as n,H as c,G as d,K as v,ag as p,y as m,A as y,L as f,M as g,O as h,a4 as _}from"./vue-55dd3248.js";import"./utils-d4f80f06.js";const w={class:"advanced-traffic-test"},b={class:"card-header"},k={class:"mode-info"},$={class:"mode-buttons"},z={class:"port-controls"},A={class:"port-input-group"},T={key:0,class:"quick-ports"},C={key:0,class:"port-status"},S={class:"test-controls"},M={class:"size-control"},U={class:"quick-tests"},x={class:"card-header"},B=a({__name:"AdvancedTrafficTest",setup(a){const B=u(null),L=u(6443),j=u(1),I=u(!1),P=u(!1),V=u(null),R=u([]),G=u([]),D=u("direct"),E=u(""),O=u({direct:{baseURL:"http://localhost:3000/api",description:"直连后端"},gost:{baseURL:"http://localhost:6443/api",description:"通过GOST代理"},production:{baseURL:"/api",description:"生产环境"}}),X=r((()=>{var e;return"admin"===(null==(e=B.value)?void 0:e.role)})),q=()=>{const e=l();D.value=e.mode,E.value=e.config.baseURL},H=e=>({direct:"直连模式",gost:"GOST模式",production:"生产模式"}[e]||e),F=async()=>{try{const a=(await e.get("/user-forward-rules")).data.rules||[];R.value=a.map((e=>({port:e.sourcePort,name:e.name,target:e.targetAddress,isActive:!0===e.isActive}))).filter((e=>e.isActive)),R.value.length>0&&(L.value=R.value[0].port)}catch(a){s.error("获取转发规则失败")}},K=async()=>{if(L.value){P.value=!0;try{if(X.value)V.value={type:"success",title:"端口可用",message:`Admin用户可以测试端口 ${L.value}`};else{const e=R.value.find((e=>e.port===L.value));V.value=e?{type:"success",title:"端口可用",message:`可以测试您的转发规则端口 ${L.value} (${e.name})`}:{type:"error",title:"端口不可用",message:`端口 ${L.value} 不在您的转发规则中，或规则未激活`}}}catch(e){V.value={type:"error",title:"验证失败",message:e.message}}finally{P.value=!1}}else V.value={type:"error",title:"端口无效",message:"请输入有效的端口号"}},J=async()=>{await N(j.value)},N=async e=>{var a,l;if(!L.value||"success"!==(null==(a=V.value)?void 0:a.type))return void s.warning("请先选择并验证端口");if(!B.value)return void s.error("用户信息未加载，请刷新页面重试");I.value=!0;const t=new Date;try{const a=localStorage.getItem("token"),u=`http://localhost:${L.value}/api/test/traffic-custom?size=${e}`;console.log(`🧪 测试端口 ${L.value}，大小 ${e}MB`),console.log(`🧪 请求URL: ${u}`);const r=await fetch(u,{method:"GET",headers:{Authorization:`Bearer ${a}`,"X-Test-Mode":"port-specific","X-User-ID":(null==(l=B.value.id)?void 0:l.toString())||"unknown","X-Username":B.value.username||"unknown",Accept:"application/json","Cache-Control":"no-cache"},signal:AbortSignal.timeout(6e4)});if(!r.ok)throw new Error(`HTTP ${r.status}: ${r.statusText}`);const o=((await r.blob()).size/1048576).toFixed(2),i=Date.now()-t.getTime();G.value.unshift({time:t.toLocaleTimeString(),port:L.value,size:`${e}MB`,actualSize:`${o}MB`,duration:`${i}ms`,status:"success",message:`通过端口 ${L.value} 成功传输`}),s.success(`测试成功: ${o}MB，耗时 ${i}ms`)}catch(u){console.error("🔥 测试失败:",u),G.value.unshift({time:t.toLocaleTimeString(),port:L.value,size:`${e}MB`,actualSize:"-",duration:"-",status:"failed",message:u.message}),s.error(`测试失败: ${u.message}`)}finally{I.value=!1}},Q=()=>{G.value=[],s.success("结果已清空")};return o((async()=>{q(),await(async()=>{var a,l;try{const a=await e.get("/users/me");a.data&&a.data.data?B.value=a.data.data:B.value=a.data,X.value||await F()}catch(t){console.error("获取用户信息失败:",t),s.error("获取用户信息失败: "+((null==(l=null==(a=t.response)?void 0:a.data)?void 0:l.message)||t.message)),B.value={id:"unknown",username:"unknown",role:"user"}}})(),L.value&&await K()})),(e,a)=>{var l;const u=p("el-tag"),r=p("el-alert"),o=p("el-card"),F=p("el-button"),W=p("el-input-number"),Y=p("el-table-column"),Z=p("el-table");return m(),i("div",w,[n(o,{class:"header-card"},{header:c((()=>{var e;return[y("div",b,[a[2]||(a[2]=y("h2",null,"🧪 高级流量测试",-1)),n(u,{type:"admin"===(null==(e=B.value)?void 0:e.role)?"success":"primary"},{default:c((()=>{var e;return[f(g((null==(e=B.value)?void 0:e.username)||"未知用户"),1)]})),_:1},8,["type"])])]})),default:c((()=>[n(r,{title:"测试说明",type:"info",closable:!1,"show-icon":""},{default:c((()=>a[3]||(a[3]=[y("p",null,"此工具整合了API模式切换和流量测试功能。",-1),y("p",null,[y("strong",null,"Admin用户"),f("：可以测试任意端口和切换API模式")],-1),y("p",null,[y("strong",null,"Test用户"),f("：可以测试自己的转发规则端口")],-1)]))),_:1,__:[3]})])),_:1}),X.value?(m(),d(o,{key:0,class:"api-mode-card"},{header:c((()=>a[4]||(a[4]=[y("h3",null,"🔧 API 模式切换",-1)]))),default:c((()=>[y("div",k,[y("p",null,[a[5]||(a[5]=y("strong",null,"当前模式：",-1)),n(u,{type:"gost"===D.value?"success":"primary"},{default:c((()=>[f(g(H(D.value)),1)])),_:1},8,["type"])]),y("p",null,[a[6]||(a[6]=y("strong",null,"当前地址：",-1)),f(" "+g(E.value),1)])]),y("div",$,[(m(!0),i(h,null,_(O.value,((e,l)=>(m(),d(F,{key:l,type:D.value===l?"primary":"default",onClick:e=>(e=>{t(e)?(q(),s.success(`已切换到${H(e)}`),setTimeout((()=>{window.location.reload()}),1e3)):s.error("切换模式失败")})(l),disabled:D.value===l},{default:c((()=>[f(g(H(l))+" ",1),a[7]||(a[7]=y("br",null,null,-1)),y("small",null,g(e.description),1)])),_:2,__:[7]},1032,["type","onClick","disabled"])))),128))])])),_:1})):v("",!0),n(o,{class:"port-selection-card"},{header:c((()=>a[8]||(a[8]=[y("h3",null,"🔌 端口选择",-1)]))),default:c((()=>[y("div",z,[y("div",A,[n(W,{modelValue:L.value,"onUpdate:modelValue":a[0]||(a[0]=e=>L.value=e),min:1,max:65535,placeholder:"输入端口号",style:{width:"200px"}},null,8,["modelValue"]),n(F,{type:"primary",onClick:K,loading:P.value},{default:c((()=>a[9]||(a[9]=[f(" 验证端口 ")]))),_:1,__:[9]},8,["loading"])]),R.value.length>0?(m(),i("div",T,[a[10]||(a[10]=y("span",null,"快速选择：",-1)),(m(!0),i(h,null,_(R.value,(e=>(m(),d(F,{key:e.port,size:"small",type:L.value===e.port?"primary":"default",onClick:a=>{L.value=e.port,K()}},{default:c((()=>[f(g(e.port)+" ("+g(e.name)+") ",1)])),_:2},1032,["type","onClick"])))),128))])):v("",!0)]),V.value?(m(),i("div",C,[n(r,{title:V.value.title,type:V.value.type,closable:!1,"show-icon":""},{default:c((()=>[f(g(V.value.message),1)])),_:1},8,["title","type"])])):v("",!0)])),_:1}),"success"===(null==(l=V.value)?void 0:l.type)?(m(),d(o,{key:1,class:"traffic-test-card"},{header:c((()=>a[11]||(a[11]=[y("h3",null,"📊 流量测试",-1)]))),default:c((()=>{var e;return[y("div",S,[y("div",M,[a[12]||(a[12]=y("label",null,"测试大小：",-1)),n(W,{modelValue:j.value,"onUpdate:modelValue":a[1]||(a[1]=e=>j.value=e),min:.1,max:1024,step:.1,precision:1,style:{width:"150px"}},null,8,["modelValue"]),a[13]||(a[13]=y("span",null,"MB",-1))]),n(F,{type:"primary",size:"large",onClick:J,loading:I.value,disabled:!L.value||"success"!==(null==(e=V.value)?void 0:e.type)},{default:c((()=>a[14]||(a[14]=[f(" 执行测试 ")]))),_:1,__:[14]},8,["loading","disabled"])]),y("div",U,[a[15]||(a[15]=y("span",null,"快速测试：",-1)),(m(),i(h,null,_([1,5,10,50,100],(e=>{var a;return n(F,{key:e,size:"small",onClick:a=>(async e=>{await N(e)})(e),loading:I.value,disabled:!L.value||"success"!==(null==(a=V.value)?void 0:a.type)},{default:c((()=>[f(g(e)+"MB ",1)])),_:2},1032,["onClick","loading","disabled"])})),64))])]})),_:1})):v("",!0),G.value.length>0?(m(),d(o,{key:2,class:"results-card"},{header:c((()=>[y("div",x,[a[17]||(a[17]=y("h3",null,"📈 测试结果",-1)),n(F,{size:"small",onClick:Q},{default:c((()=>a[16]||(a[16]=[f("清空结果")]))),_:1,__:[16]})])])),default:c((()=>[n(Z,{data:G.value,stripe:""},{default:c((()=>[n(Y,{prop:"time",label:"时间",width:"120"}),n(Y,{prop:"port",label:"端口",width:"80"}),n(Y,{prop:"size",label:"请求大小",width:"100"}),n(Y,{prop:"actualSize",label:"实际大小",width:"100"}),n(Y,{prop:"duration",label:"耗时",width:"100"}),n(Y,{prop:"status",label:"状态",width:"80"},{default:c((({row:e})=>[n(u,{type:"success"===e.status?"success":"danger"},{default:c((()=>[f(g("success"===e.status?"成功":"失败"),1)])),_:2},1032,["type"])])),_:1}),n(Y,{prop:"message",label:"详情"})])),_:1},8,["data"])])),_:1})):v("",!0)])}}},[["__scopeId","data-v-aee304b8"]]);export{B as default};
